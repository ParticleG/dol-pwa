name: Main

on:
  schedule:
    - cron: "0 20 * * *"
  workflow_dispatch:

env:
  RELEASE_ARTIFACT_NAME: dol_release_package
  RELEASE_ARTIFACT_PATH: ./dol-release.zip
  RELEASE_FOLDER_PATH: ./dol-release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: getRelease
        name: release-downloader
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "Eltirosto/Degrees-of-Lewdity-Chinese-Localization"
          latest: true
          fileName: "dol-*.zip"
      - name: Extract downloaded file
        run: |
          echo "Downloaded Chinese version DOL: ${{ steps.getRelease.outputs.tag_name }}"
          unzip -q ${{ fromJson(steps.getRelease.outputs.downloaded_files)[0] }} -d ${{ env.RELEASE_FOLDER_PATH }}
      - name: Construct PWA
        run: |
          cp -r .github/pwa/* ${{ env.RELEASE_FOLDER_PATH }}
          mv "${{ env.RELEASE_FOLDER_PATH }}/Degrees of Lewdity.html" ${{ env.RELEASE_FOLDER_PATH }}/index.html
      - name: Modify HTML
        shell: python3 {0}
        run: |
          with open("${{ env.RELEASE_FOLDER_PATH }}/index.html", "r+", encoding="utf-8") as index_html_file:
            index_html = index_html_file.read()
            insert_index = index_html.find("<head>") + 7
            index_html = index_html[:insert_index] + \
                "<link rel=\"manifest\" href=\"manifest.json\">\n" + index_html[insert_index:]
            insert_index = index_html.find("<body>") + 7
            index_html = index_html[:insert_index] + \
                "    <script>\n" + \
                "        if (typeof navigator.serviceWorker !== 'undefined') {\n" + \
                "            navigator.serviceWorker.register('sw.js')\n" + \
                "        }\n" + \
                "    </script>\n" + index_html[insert_index:]
            index_html_file.seek(0)
            index_html_file.truncate()
            index_html_file.write(index_html)
      - name: Pack release artifact
        run: |
          7z a ${{ env.RELEASE_ARTIFACT_PATH }} ${{ env.RELEASE_FOLDER_PATH }}/*
      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
          path: ${{ env.RELEASE_ARTIFACT_PATH }}

  apply-mods:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
      - name: Unzip release artifact
        run: |
          unzip -q ${{ env.RELEASE_ARTIFACT_PATH }} -d ${{ env.RELEASE_FOLDER_PATH }}
      - name: Apply 'Degrees of Lewdity Graphics Mod'
        env:
          MOD_FOLDER_PATH: ./degrees-of-lewdity-graphics-mod
        run: |
          mkdir ${{ env.MOD_FOLDER_PATH }}
          pushd ${{ env.MOD_FOLDER_PATH }}
          wget -q https://gitgud.io/BEEESSS/degrees-of-lewdity-graphics-mod/-/raw/master/img.zip?ref_type=heads -O img.zip
          unzip -q ./img.zip
          rm img.zip
          popd
          cp -r ${{ env.MOD_FOLDER_PATH }}/* ${{ env.RELEASE_FOLDER_PATH }}
          rm -rf ${{ env.MOD_FOLDER_PATH }}
      - name: Modify HTML
        shell: python3 {0}
        run: |
          with open("${{ env.RELEASE_FOLDER_PATH }}/index.html", "r+", encoding="utf-8") as index_html_file:
            index_html = index_html_file.read()
            insert_index = index_html.find("</body>")
            index_html = index_html[:insert_index] + \
                "  <script type=\"text/javascript\">\n" + \
                "    const sleep = (timeout) => new Promise(resolve => setTimeout(resolve, timeout));\n" + \
                "    (async () => {\n" + \
                "      let versionElement = document.querySelector('#versioninfo');\n" + \
                "      while (!versionElement) {\n" + \
                "        versionElement = document.querySelector('#versioninfo');\n" + \
                "        await sleep(100);\n" + \
                "      }\n" + \
                "      const newElement = document.createElement('div')\n" + \
                "      newElement.style = 'text-align: left; font-size: 0.75rem'\n" + \
                "      newElement.innerHTML = '<br>Applied Mods:<br>- Degrees of Lewdity Graphics Mod<br>'\n" + \
                "      versionElement.insertBefore(newElement, versionElement.querySelectorAll('br')[3]);\n" + \
                "    })();\n" + \
                "  </script>\n" + index_html[insert_index:]
            index_html_file.seek(0)
            index_html_file.truncate()
            index_html_file.write(index_html)
      - name: Pack release artifact
        run: |
          7z a ${{ env.RELEASE_ARTIFACT_PATH }} ${{ env.RELEASE_FOLDER_PATH }}/*
      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
          path: ${{ env.RELEASE_ARTIFACT_PATH }}

  deploy-github:
    runs-on: ubuntu-latest
    needs: apply-mods
    steps:
      - uses: actions/checkout@v3
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
      - name: Unzip release artifact
        run: |
          unzip -q ${{ env.RELEASE_ARTIFACT_PATH }} -d ${{ env.RELEASE_FOLDER_PATH }}
      - name: Modify manifest.json
        shell: python3 {0}
        run: |
          import json
          with open("${{ env.RELEASE_FOLDER_PATH }}/manifest.json", "r+", encoding="utf-8") as manifest_file:
            manifest_json = json.loads(manifest_file.read())
            manifest_json["scope"] = "/${{ github.event.repository.name }}/"
            manifest_json["start_url"] = "/${{ github.event.repository.name }}/"
            manifest_json["shortcuts"][0]["url"] = "/${{ github.event.repository.name }}/"
            for icon in manifest_json["icons"]:
              icon["src"] = icon["src"].replace("icons/", "/${{ github.event.repository.name }}/icons/")
            manifest_file.seek(0)
            manifest_file.truncate()
            manifest_file.write(json.dumps(manifest_json, indent=2))
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          build_dir: ${{ env.RELEASE_FOLDER_PATH }}
          keep_history: false
          target_branch: gh-pages

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: apply-mods
    steps:
      - uses: actions/checkout@v3
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
      - name: Unzip release artifact
        run: |
          unzip -q ${{ env.RELEASE_ARTIFACT_PATH }} -d ${{ env.RELEASE_FOLDER_PATH }}
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        continue-on-error: true
        with:
          github-comment: false
          vercel-args: --prod
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ${{ env.RELEASE_FOLDER_PATH }}

  post-build:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [deploy-github, deploy-vercel]
    steps:
      - name: Cleanup
        uses: geekyeggo/delete-artifact@v2
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
